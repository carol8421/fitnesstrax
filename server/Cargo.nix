# Generated by carnix 0.9.8: carnix generate-nix --src .
{ lib, buildPlatform, buildRustCrate, buildRustCrateHelpers, cratesIO, fetchgit }:
with buildRustCrateHelpers;
let inherit (lib.lists) fold;
    inherit (lib.attrsets) recursiveUpdate;
in
rec {
  crates = cratesIO // rec {
# fitnesstrax-0.1.0

    crates.fitnesstrax."0.1.0" = deps: { features?(features_.fitnesstrax."0.1.0" deps {}) }: buildRustCrate {
      crateName = "fitnesstrax";
      version = "0.1.0";
      authors = [ "Savanni D'Gerinel <savanni@luminescent-dreams.com>" ];
      edition = "2018";
      src = exclude [ ".git" "target" ] /Users/savanni/src/luminescent-dreams/fitnesstrax/server/../fitnesstrax-lib;
      dependencies = mapFeatures features ([
        (cratesIO.crates."chrono"."${deps."fitnesstrax"."0.1.0"."chrono"}" deps)
        (cratesIO.crates."chrono_tz"."${deps."fitnesstrax"."0.1.0"."chrono_tz"}" deps)
        (cratesIO.crates."dimensioned"."${deps."fitnesstrax"."0.1.0"."dimensioned"}" deps)
        (cratesIO.crates."emseries"."${deps."fitnesstrax"."0.1.0"."emseries"}" deps)
        (cratesIO.crates."serde"."${deps."fitnesstrax"."0.1.0"."serde"}" deps)
        (cratesIO.crates."serde_derive"."${deps."fitnesstrax"."0.1.0"."serde_derive"}" deps)
        (cratesIO.crates."serde_json"."${deps."fitnesstrax"."0.1.0"."serde_json"}" deps)
      ]);
    };
    features_.fitnesstrax."0.1.0" = deps: f: updateFeatures f (rec {
      chrono = fold recursiveUpdate {} [
        { "${deps.fitnesstrax."0.1.0".chrono}"."serde" = true; }
        { "${deps.fitnesstrax."0.1.0".chrono}".default = true; }
      ];
      chrono_tz = fold recursiveUpdate {} [
        { "${deps.fitnesstrax."0.1.0".chrono_tz}"."serde" = true; }
        { "${deps.fitnesstrax."0.1.0".chrono_tz}".default = true; }
      ];
      dimensioned."${deps.fitnesstrax."0.1.0".dimensioned}".default = true;
      emseries."${deps.fitnesstrax."0.1.0".emseries}".default = true;
      fitnesstrax."0.1.0".default = (f.fitnesstrax."0.1.0".default or true);
      serde."${deps.fitnesstrax."0.1.0".serde}".default = true;
      serde_derive."${deps.fitnesstrax."0.1.0".serde_derive}".default = true;
      serde_json."${deps.fitnesstrax."0.1.0".serde_json}".default = true;
    }) [
      (cratesIO.features_.chrono."${deps."fitnesstrax"."0.1.0"."chrono"}" deps)
      (cratesIO.features_.chrono_tz."${deps."fitnesstrax"."0.1.0"."chrono_tz"}" deps)
      (cratesIO.features_.dimensioned."${deps."fitnesstrax"."0.1.0"."dimensioned"}" deps)
      (cratesIO.features_.emseries."${deps."fitnesstrax"."0.1.0"."emseries"}" deps)
      (cratesIO.features_.serde."${deps."fitnesstrax"."0.1.0"."serde"}" deps)
      (cratesIO.features_.serde_derive."${deps."fitnesstrax"."0.1.0"."serde_derive"}" deps)
      (cratesIO.features_.serde_json."${deps."fitnesstrax"."0.1.0"."serde_json"}" deps)
    ];


# end
# fitnesstrax-server-0.1.0

    crates.fitnesstrax_server."0.1.0" = deps: { features?(features_.fitnesstrax_server."0.1.0" deps {}) }: buildRustCrate {
      crateName = "fitnesstrax-server";
      version = "0.1.0";
      authors = [ "Savanni D'Gerinel <savanni@luminescent-dreams.com>" ];
      src = exclude [ ".git" "target" ] ./.;
      crateBin =
        [{  name = "fitnesstrax-server";  path = "src/web.rs"; }] ++
        [{  name = "load_records";  path = "src/load_records.rs"; }] ++
        [{  name = "space_importer";  path = "src/space_importer.rs"; }];
      dependencies = mapFeatures features ([
        (cratesIO.crates."chrono"."${deps."fitnesstrax_server"."0.1.0"."chrono"}" deps)
        (cratesIO.crates."chrono_tz"."${deps."fitnesstrax_server"."0.1.0"."chrono_tz"}" deps)
        (cratesIO.crates."dimensioned"."${deps."fitnesstrax_server"."0.1.0"."dimensioned"}" deps)
        (cratesIO.crates."emseries"."${deps."fitnesstrax_server"."0.1.0"."emseries"}" deps)
        (crates."fitnesstrax"."${deps."fitnesstrax_server"."0.1.0"."fitnesstrax"}" deps)
        (cratesIO.crates."iron"."${deps."fitnesstrax_server"."0.1.0"."iron"}" deps)
        (cratesIO.crates."iron_cors"."${deps."fitnesstrax_server"."0.1.0"."iron_cors"}" deps)
        (cratesIO.crates."micrologger"."${deps."fitnesstrax_server"."0.1.0"."micrologger"}" deps)
        (cratesIO.crates."orizentic"."${deps."fitnesstrax_server"."0.1.0"."orizentic"}" deps)
        (cratesIO.crates."params"."${deps."fitnesstrax_server"."0.1.0"."params"}" deps)
        (cratesIO.crates."router"."${deps."fitnesstrax_server"."0.1.0"."router"}" deps)
        (cratesIO.crates."serde"."${deps."fitnesstrax_server"."0.1.0"."serde"}" deps)
        (cratesIO.crates."serde_derive"."${deps."fitnesstrax_server"."0.1.0"."serde_derive"}" deps)
        (cratesIO.crates."serde_json"."${deps."fitnesstrax_server"."0.1.0"."serde_json"}" deps)
        (cratesIO.crates."urlencoding"."${deps."fitnesstrax_server"."0.1.0"."urlencoding"}" deps)
      ]);
    };
    features_.fitnesstrax_server."0.1.0" = deps: f: updateFeatures f (rec {
      chrono = fold recursiveUpdate {} [
        { "${deps.fitnesstrax_server."0.1.0".chrono}"."serde" = true; }
        { "${deps.fitnesstrax_server."0.1.0".chrono}".default = true; }
      ];
      chrono_tz = fold recursiveUpdate {} [
        { "${deps.fitnesstrax_server."0.1.0".chrono_tz}"."serde" = true; }
        { "${deps.fitnesstrax_server."0.1.0".chrono_tz}".default = true; }
      ];
      dimensioned."${deps.fitnesstrax_server."0.1.0".dimensioned}".default = true;
      emseries."${deps.fitnesstrax_server."0.1.0".emseries}".default = true;
      fitnesstrax."${deps.fitnesstrax_server."0.1.0".fitnesstrax}".default = true;
      fitnesstrax_server."0.1.0".default = (f.fitnesstrax_server."0.1.0".default or true);
      iron."${deps.fitnesstrax_server."0.1.0".iron}".default = true;
      iron_cors."${deps.fitnesstrax_server."0.1.0".iron_cors}".default = true;
      micrologger."${deps.fitnesstrax_server."0.1.0".micrologger}".default = true;
      orizentic."${deps.fitnesstrax_server."0.1.0".orizentic}".default = true;
      params."${deps.fitnesstrax_server."0.1.0".params}".default = true;
      router."${deps.fitnesstrax_server."0.1.0".router}".default = true;
      serde."${deps.fitnesstrax_server."0.1.0".serde}".default = true;
      serde_derive."${deps.fitnesstrax_server."0.1.0".serde_derive}".default = true;
      serde_json."${deps.fitnesstrax_server."0.1.0".serde_json}".default = true;
      urlencoding."${deps.fitnesstrax_server."0.1.0".urlencoding}".default = true;
    }) [
      (cratesIO.features_.chrono."${deps."fitnesstrax_server"."0.1.0"."chrono"}" deps)
      (cratesIO.features_.chrono_tz."${deps."fitnesstrax_server"."0.1.0"."chrono_tz"}" deps)
      (cratesIO.features_.dimensioned."${deps."fitnesstrax_server"."0.1.0"."dimensioned"}" deps)
      (cratesIO.features_.emseries."${deps."fitnesstrax_server"."0.1.0"."emseries"}" deps)
      (features_.fitnesstrax."${deps."fitnesstrax_server"."0.1.0"."fitnesstrax"}" deps)
      (cratesIO.features_.iron."${deps."fitnesstrax_server"."0.1.0"."iron"}" deps)
      (cratesIO.features_.iron_cors."${deps."fitnesstrax_server"."0.1.0"."iron_cors"}" deps)
      (cratesIO.features_.micrologger."${deps."fitnesstrax_server"."0.1.0"."micrologger"}" deps)
      (cratesIO.features_.orizentic."${deps."fitnesstrax_server"."0.1.0"."orizentic"}" deps)
      (cratesIO.features_.params."${deps."fitnesstrax_server"."0.1.0"."params"}" deps)
      (cratesIO.features_.router."${deps."fitnesstrax_server"."0.1.0"."router"}" deps)
      (cratesIO.features_.serde."${deps."fitnesstrax_server"."0.1.0"."serde"}" deps)
      (cratesIO.features_.serde_derive."${deps."fitnesstrax_server"."0.1.0"."serde_derive"}" deps)
      (cratesIO.features_.serde_json."${deps."fitnesstrax_server"."0.1.0"."serde_json"}" deps)
      (cratesIO.features_.urlencoding."${deps."fitnesstrax_server"."0.1.0"."urlencoding"}" deps)
    ];


# end

  };

  fitnesstrax_server = crates.crates.fitnesstrax_server."0.1.0" deps;
  __all = [ (fitnesstrax_server {}) ];
  deps.aho_corasick."0.6.10" = {
    memchr = "2.2.1";
  };
  deps.ansi_term."0.11.0" = {
    winapi = "0.3.8";
  };
  deps.atty."0.2.13" = {
    libc = "0.2.62";
    winapi = "0.3.8";
  };
  deps.autocfg."0.1.6" = {};
  deps.base64."0.9.3" = {
    byteorder = "1.3.2";
    safemem = "0.3.2";
  };
  deps.bitflags."1.1.0" = {};
  deps.bodyparser."0.8.0" = {
    iron = "0.6.1";
    persistent = "0.4.0";
    plugin = "0.2.6";
    serde = "1.0.99";
    serde_json = "1.0.40";
  };
  deps.buf_redux."0.6.3" = {
    memchr = "1.0.2";
    safemem = "0.2.0";
  };
  deps.byteorder."1.3.2" = {};
  deps.cc."1.0.41" = {};
  deps.cfg_if."0.1.9" = {};
  deps.chrono."0.4.9" = {
    libc = "0.2.62";
    num_integer = "0.1.41";
    num_traits = "0.2.8";
    serde = "1.0.99";
    time = "0.1.42";
  };
  deps.chrono_tz."0.4.1" = {
    chrono = "0.4.9";
    serde = "1.0.99";
    parse_zoneinfo = "0.1.1";
  };
  deps.clap."2.33.0" = {
    atty = "0.2.13";
    bitflags = "1.1.0";
    strsim = "0.8.0";
    textwrap = "0.11.0";
    unicode_width = "0.1.6";
    vec_map = "0.8.1";
    ansi_term = "0.11.0";
  };
  deps.cloudabi."0.0.3" = {
    bitflags = "1.1.0";
  };
  deps.dimensioned."0.7.0" = {
    generic_array = "0.11.1";
    num_traits = "0.2.8";
    serde = "1.0.99";
    typenum = "1.11.2";
  };
  deps.either."1.5.2" = {};
  deps.emseries."0.4.0" = {
    chrono = "0.4.9";
    chrono_tz = "0.4.1";
    dimensioned = "0.7.0";
    serde = "1.0.99";
    serde_derive = "1.0.99";
    serde_json = "1.0.40";
    uuid = "0.6.5";
    yaml_rust = "0.4.3";
  };
  deps.fitnesstrax."0.1.0" = {
    chrono = "0.4.9";
    chrono_tz = "0.4.1";
    dimensioned = "0.7.0";
    emseries = "0.4.0";
    serde = "1.0.99";
    serde_derive = "1.0.99";
    serde_json = "1.0.40";
  };
  deps.fitnesstrax_server."0.1.0" = {
    chrono = "0.4.9";
    chrono_tz = "0.4.1";
    dimensioned = "0.7.0";
    emseries = "0.4.0";
    fitnesstrax = "0.1.0";
    iron = "0.6.1";
    iron_cors = "0.8.0";
    micrologger = "0.1.0";
    orizentic = "1.0.0";
    params = "0.8.0";
    router = "0.6.0";
    serde = "1.0.99";
    serde_derive = "1.0.99";
    serde_json = "1.0.40";
    urlencoding = "1.0.0";
  };
  deps.fuchsia_cprng."0.1.1" = {};
  deps.generic_array."0.11.1" = {
    typenum = "1.11.2";
  };
  deps.httparse."1.3.4" = {};
  deps.hyper."0.10.16" = {
    base64 = "0.9.3";
    httparse = "1.3.4";
    language_tags = "0.2.2";
    log = "0.3.9";
    mime = "0.2.6";
    num_cpus = "1.10.1";
    time = "0.1.42";
    traitobject = "0.1.0";
    typeable = "0.1.2";
    unicase = "1.4.2";
    url = "1.7.2";
  };
  deps.idna."0.1.5" = {
    matches = "0.1.8";
    unicode_bidi = "0.3.4";
    unicode_normalization = "0.1.8";
  };
  deps.iron."0.6.1" = {
    hyper = "0.10.16";
    log = "0.3.9";
    mime_guess = "1.8.7";
    modifier = "0.1.0";
    num_cpus = "1.10.1";
    plugin = "0.2.6";
    typemap = "0.3.3";
    url = "1.7.2";
  };
  deps.iron_cors."0.8.0" = {
    iron = "0.6.1";
    log = "0.4.8";
  };
  deps.itertools."0.7.11" = {
    either = "1.5.2";
  };
  deps.itoa."0.4.4" = {};
  deps.jsonwebtoken."5.0.1" = {
    base64 = "0.9.3";
    chrono = "0.4.9";
    ring = "0.13.5";
    serde = "1.0.99";
    serde_derive = "1.0.99";
    serde_json = "1.0.40";
    untrusted = "0.6.2";
  };
  deps.language_tags."0.2.2" = {};
  deps.lazy_static."1.4.0" = {};
  deps.libc."0.2.62" = {};
  deps.linked_hash_map."0.5.2" = {};
  deps.log."0.3.9" = {
    log = "0.4.8";
  };
  deps.log."0.4.8" = {
    cfg_if = "0.1.9";
  };
  deps.matches."0.1.8" = {};
  deps.memchr."1.0.2" = {
    libc = "0.2.62";
  };
  deps.memchr."2.2.1" = {};
  deps.micrologger."0.1.0" = {
    chrono = "0.4.9";
    serde = "1.0.99";
    serde_derive = "1.0.99";
    serde_json = "1.0.40";
  };
  deps.mime."0.2.6" = {
    log = "0.3.9";
  };
  deps.mime_guess."1.8.7" = {
    mime = "0.2.6";
    phf = "0.7.24";
    unicase = "1.4.2";
    phf_codegen = "0.7.24";
  };
  deps.modifier."0.1.0" = {};
  deps.multipart."0.13.6" = {
    buf_redux = "0.6.3";
    httparse = "1.3.4";
    log = "0.3.9";
    mime = "0.2.6";
    mime_guess = "1.8.7";
    rand = "0.3.23";
    safemem = "0.2.0";
    tempdir = "0.3.7";
    twoway = "0.1.8";
  };
  deps.num."0.1.42" = {
    num_bigint = "0.1.44";
    num_complex = "0.1.43";
    num_integer = "0.1.41";
    num_iter = "0.1.39";
    num_rational = "0.1.42";
    num_traits = "0.2.8";
  };
  deps.num_bigint."0.1.44" = {
    num_integer = "0.1.41";
    num_traits = "0.2.8";
    rand = "0.4.6";
    rustc_serialize = "0.3.24";
  };
  deps.num_complex."0.1.43" = {
    num_traits = "0.2.8";
    rustc_serialize = "0.3.24";
  };
  deps.num_integer."0.1.41" = {
    num_traits = "0.2.8";
    autocfg = "0.1.6";
  };
  deps.num_iter."0.1.39" = {
    num_integer = "0.1.41";
    num_traits = "0.2.8";
    autocfg = "0.1.6";
  };
  deps.num_rational."0.1.42" = {
    num_bigint = "0.1.44";
    num_integer = "0.1.41";
    num_traits = "0.2.8";
    rustc_serialize = "0.3.24";
  };
  deps.num_traits."0.2.8" = {
    autocfg = "0.1.6";
  };
  deps.num_cpus."1.10.1" = {
    libc = "0.2.62";
  };
  deps.orizentic."1.0.0" = {
    chrono = "0.4.9";
    clap = "2.33.0";
    itertools = "0.7.11";
    jsonwebtoken = "5.0.1";
    serde = "1.0.99";
    serde_derive = "1.0.99";
    serde_json = "1.0.40";
    uuid = "0.6.5";
    version_check = "0.1.5";
    yaml_rust = "0.4.3";
  };
  deps.params."0.8.0" = {
    bodyparser = "0.8.0";
    iron = "0.6.1";
    multipart = "0.13.6";
    num = "0.1.42";
    plugin = "0.2.6";
    serde_json = "1.0.40";
    tempdir = "0.3.7";
    urlencoded = "0.6.0";
  };
  deps.parse_zoneinfo."0.1.1" = {
    regex = "0.2.11";
  };
  deps.percent_encoding."1.0.1" = {};
  deps.persistent."0.4.0" = {
    iron = "0.6.1";
    plugin = "0.2.6";
  };
  deps.phf."0.7.24" = {
    phf_shared = "0.7.24";
  };
  deps.phf_codegen."0.7.24" = {
    phf_generator = "0.7.24";
    phf_shared = "0.7.24";
  };
  deps.phf_generator."0.7.24" = {
    phf_shared = "0.7.24";
    rand = "0.6.5";
  };
  deps.phf_shared."0.7.24" = {
    siphasher = "0.2.3";
    unicase = "1.4.2";
  };
  deps.plugin."0.2.6" = {
    typemap = "0.3.3";
  };
  deps.proc_macro2."1.0.2" = {
    unicode_xid = "0.2.0";
  };
  deps.quote."1.0.2" = {
    proc_macro2 = "1.0.2";
  };
  deps.rand."0.3.23" = {
    libc = "0.2.62";
    rand = "0.4.6";
  };
  deps.rand."0.4.6" = {
    rand_core = "0.3.1";
    rdrand = "0.4.0";
    fuchsia_cprng = "0.1.1";
    libc = "0.2.62";
    winapi = "0.3.8";
  };
  deps.rand."0.6.5" = {
    rand_chacha = "0.1.1";
    rand_core = "0.4.2";
    rand_hc = "0.1.0";
    rand_isaac = "0.1.1";
    rand_jitter = "0.1.4";
    rand_os = "0.1.3";
    rand_pcg = "0.1.2";
    rand_xorshift = "0.1.1";
    autocfg = "0.1.6";
    libc = "0.2.62";
    winapi = "0.3.8";
  };
  deps.rand_chacha."0.1.1" = {
    rand_core = "0.3.1";
    autocfg = "0.1.6";
  };
  deps.rand_core."0.3.1" = {
    rand_core = "0.4.2";
  };
  deps.rand_core."0.4.2" = {};
  deps.rand_hc."0.1.0" = {
    rand_core = "0.3.1";
  };
  deps.rand_isaac."0.1.1" = {
    rand_core = "0.3.1";
  };
  deps.rand_jitter."0.1.4" = {
    rand_core = "0.4.2";
    libc = "0.2.62";
    winapi = "0.3.8";
  };
  deps.rand_os."0.1.3" = {
    rand_core = "0.4.2";
    rdrand = "0.4.0";
    cloudabi = "0.0.3";
    fuchsia_cprng = "0.1.1";
    libc = "0.2.62";
    winapi = "0.3.8";
  };
  deps.rand_pcg."0.1.2" = {
    rand_core = "0.4.2";
    autocfg = "0.1.6";
  };
  deps.rand_xorshift."0.1.1" = {
    rand_core = "0.3.1";
  };
  deps.rdrand."0.4.0" = {
    rand_core = "0.3.1";
  };
  deps.redox_syscall."0.1.56" = {};
  deps.regex."0.2.11" = {
    aho_corasick = "0.6.10";
    memchr = "2.2.1";
    regex_syntax = "0.5.6";
    thread_local = "0.3.6";
    utf8_ranges = "1.0.4";
  };
  deps.regex_syntax."0.5.6" = {
    ucd_util = "0.1.5";
  };
  deps.remove_dir_all."0.5.2" = {
    winapi = "0.3.8";
  };
  deps.ring."0.13.5" = {
    untrusted = "0.6.2";
    cc = "1.0.41";
    lazy_static = "1.4.0";
    libc = "0.2.62";
  };
  deps.route_recognizer."0.1.13" = {};
  deps.router."0.6.0" = {
    iron = "0.6.1";
    route_recognizer = "0.1.13";
    url = "1.7.2";
  };
  deps.rustc_serialize."0.3.24" = {};
  deps.ryu."1.0.0" = {};
  deps.safemem."0.2.0" = {};
  deps.safemem."0.3.2" = {};
  deps.serde."1.0.99" = {};
  deps.serde_derive."1.0.99" = {
    proc_macro2 = "1.0.2";
    quote = "1.0.2";
    syn = "1.0.5";
  };
  deps.serde_json."1.0.40" = {
    itoa = "0.4.4";
    ryu = "1.0.0";
    serde = "1.0.99";
  };
  deps.siphasher."0.2.3" = {};
  deps.smallvec."0.6.10" = {};
  deps.strsim."0.8.0" = {};
  deps.syn."1.0.5" = {
    proc_macro2 = "1.0.2";
    quote = "1.0.2";
    unicode_xid = "0.2.0";
  };
  deps.tempdir."0.3.7" = {
    rand = "0.4.6";
    remove_dir_all = "0.5.2";
  };
  deps.textwrap."0.11.0" = {
    unicode_width = "0.1.6";
  };
  deps.thread_local."0.3.6" = {
    lazy_static = "1.4.0";
  };
  deps.time."0.1.42" = {
    libc = "0.2.62";
    redox_syscall = "0.1.56";
    winapi = "0.3.8";
  };
  deps.traitobject."0.1.0" = {};
  deps.twoway."0.1.8" = {
    memchr = "2.2.1";
  };
  deps.typeable."0.1.2" = {};
  deps.typemap."0.3.3" = {
    unsafe_any = "0.4.2";
  };
  deps.typenum."1.11.2" = {};
  deps.ucd_util."0.1.5" = {};
  deps.unicase."1.4.2" = {
    version_check = "0.1.5";
  };
  deps.unicode_bidi."0.3.4" = {
    matches = "0.1.8";
  };
  deps.unicode_normalization."0.1.8" = {
    smallvec = "0.6.10";
  };
  deps.unicode_width."0.1.6" = {};
  deps.unicode_xid."0.2.0" = {};
  deps.unsafe_any."0.4.2" = {
    traitobject = "0.1.0";
  };
  deps.untrusted."0.6.2" = {};
  deps.url."1.7.2" = {
    idna = "0.1.5";
    matches = "0.1.8";
    percent_encoding = "1.0.1";
  };
  deps.urlencoded."0.6.0" = {
    bodyparser = "0.8.0";
    iron = "0.6.1";
    plugin = "0.2.6";
    url = "1.7.2";
  };
  deps.urlencoding."1.0.0" = {};
  deps.utf8_ranges."1.0.4" = {};
  deps.uuid."0.6.5" = {
    cfg_if = "0.1.9";
    rand = "0.4.6";
    serde = "1.0.99";
  };
  deps.vec_map."0.8.1" = {};
  deps.version_check."0.1.5" = {};
  deps.winapi."0.3.8" = {
    winapi_i686_pc_windows_gnu = "0.4.0";
    winapi_x86_64_pc_windows_gnu = "0.4.0";
  };
  deps.winapi_i686_pc_windows_gnu."0.4.0" = {};
  deps.winapi_x86_64_pc_windows_gnu."0.4.0" = {};
  deps.yaml_rust."0.4.3" = {
    linked_hash_map = "0.5.2";
  };
}
